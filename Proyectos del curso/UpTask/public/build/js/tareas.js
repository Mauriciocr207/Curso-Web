(()=>{let e=[],t=[];!async function(){try{const t="/api/task?url="+o(),a=await fetch(t),n=await a.json();e=n.tareas,c()}catch(e){console.log(e)}}();document.querySelector("#agregar-tarea").addEventListener("click",(function(){a()}));function a(t=!1,a={}){const n=document.createElement("DIV");n.classList.add("modal"),n.innerHTML=`\n            <form class="form nueva-tarea">\n                <legend>${t?"Editar el Título":"Añade una tarea"}</legend>\n                <div class="campo">\n                    <label class="bg-azul">${t?"Título":"Tarea"}</label>\n                    <input\n                        type="text"\n                        name="tarea"\n                        placeholder="${t?"Nuevo Título":"Añadir tarea"}"\n                        id="tarea"\n                        class="col-span-2"\n                        value="${t?a.nombre:""}"\n                    />\n                </div>\n                <div class="opciones">\n                    <input type="submit" class="submit-nueva-tarea" value="${t?"Añadir Título":"Añadir Tarea"}"/>\n                    <button type="button" class="cerrar-modal" >Cancelar</button>\n                </div>\n            </form>\n        `,document.querySelector("body").appendChild(n),setTimeout(()=>{document.querySelector(".form").classList.add("animar")},10),n.addEventListener("click",i=>{i.preventDefault();const d=i.target.classList;if(d.contains("cerrar-modal")||d.contains("modal")){document.querySelector(".form").classList.add("cerrar"),setTimeout(()=>{n.remove()},150)}if(d.contains("submit-nueva-tarea")){const n=document.querySelector("#tarea").value.trim();if(""===n)r("El nombre de la tarea es Obligatorio","err",".form.nueva-tarea .campo");else if(t){a.nombre=n,s(a);const e=document.querySelector(".modal");setTimeout(()=>{e.remove()},1e3)}else!async function(t){const a=new FormData;a.append("data",JSON.stringify({tarea:{nombre:t},proyecto:{url:o()}}));try{const o="/api/task/create",n=await fetch(o,{method:"POST",body:a}),s=await n.json();if(s.res){r("Tarea creada correctamente","enviado",".form.nueva-tarea .campo");const a=document.querySelector(".modal");setTimeout(()=>{a.remove()},1e3);const o={id:parseInt(s.tarea.id),nombre:t,estado:0,id_proyecto:parseInt(s.tarea.id_proyecto)};e.push(o),c()}else r("No se pudo crear la tarea","err",".form.nueva-tarea .campo")}catch(e){console.log(e)}}(n)}})}function o(){const e=new URLSearchParams(window.location.search);return Object.fromEntries(e).url}function n({...t}){Swal.fire({title:"¿Quieres eliminar la tarea?",showCancelButton:!0,confirmButtonText:"Sí",cancelButtonText:"No"}).then(a=>{a.isConfirmed&&async function(t){const{id:a}=t,n=new FormData;n.append("data",JSON.stringify({tarea:{id:a},proyecto:{url:o()}}));try{const t="/api/task/delete",o=await fetch(t,{method:"POST",body:n});!0===(await o.json()).res?(e=e.filter(e=>e.id!==a),c(),r("Se borró correctamente","enviado","#listado-tareas")):r("No se pudo borrar","err","#listado-tareas")}catch(e){console.log(e)}}(t)})}function r(e,t,a,o=!0){const n=document.querySelector(".alert");n&&n.remove();const r=document.createElement("DIV");r.innerHTML=`\n            <div class="alert">\n                <div class="${t}">\n                    ${e}\n                </div>\n            </div>\n        `;const c=document.querySelector(""+a);c.parentElement.insertBefore(r,c),o&&setTimeout(()=>{r.remove()},5e3)}function c(){!function(){const e=document.querySelector("#listado-tareas");for(;e.firstChild;)e.removeChild(e.firstChild)}();const o=function(){const a=document.querySelectorAll('#filtros input[type="radio"]');let o=-1;return a.forEach(e=>{e.checked&&(o=parseInt(e.value))}),t=e,-1!==o&&(t=e.filter(e=>e.estado===o)),t}();if(0===o.length)r("No hay tareas","err","#listado-tareas",!1);else{const e={0:"Pendiente",1:"Completa"};o.forEach(t=>{const o=document.createElement("LI");o.dataset.tareaId=t.id,o.classList.add("tarea");const r=document.createElement("DIV");r.classList.add("nombre-box");const c=document.createElement("P");c.textContent=""+t.nombre;const i=document.createElement("DIV");i.classList.add("icon"),i.innerHTML='<i class="fa-solid fa-pen-to-square"></i>',i.onclick=function(){a(!0,t)},r.append(c,i);const d=document.createElement("DIV");d.classList.add("opciones");const l=document.createElement("BUTTON");l.classList.add("estado-tarea"),l.classList.add(""+e[t.estado].toLowerCase()),l.textContent=e[t.estado],l.dataset.estadoTarea=t.estado,l.onclick=function(){!function({...e}){e.estado=+!e.estado,s(e)}(t)};const u=document.createElement("BUTTON");u.classList.add("eliminar-tarea"),u.textContent="Eliminar",u.dataset.idTarea=t.id,u.onclick=function(){n(t)},d.append(l,u),o.append(r,d);document.querySelector("#listado-tareas").appendChild(o)})}}async function s(t){const{estado:a,id:n,nombre:s}=t,i=new FormData;i.append("data",JSON.stringify({tarea:{id:n,estado:a,nombre:s},proyecto:{url:o()}}));try{const t="/api/task/update",a=await fetch(t,{method:"POST",body:i}),o=await a.json();!0===o.res?(e=e.map(e=>(e.id===parseInt(o.tarea.id)&&(e.estado=parseInt(o.tarea.estado)),e)),r("Actualizado correctamente","enviado","#listado-tareas"),c()):r("No se pudo actualizar","err","#listado-tareas")}catch(e){console.log(e)}}document.querySelectorAll('#filtros input[type="radio"]').forEach(e=>{e.addEventListener("input",c)}),document.addEventListener("keydown",e=>{if("Escape"===e.key){const e=document.querySelector(".modal");e&&e.remove()}})})();
//# sourceMappingURL=tareas.js.map
