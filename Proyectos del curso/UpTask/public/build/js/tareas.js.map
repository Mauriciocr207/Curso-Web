{"version":3,"sources":["tareas.js"],"names":["tareas","filtradas","async","url","obtenerUrlProyecto","data","fetch","result","json","mostrarTareas","error","console","log","obtenerTareas","document","querySelector","addEventListener","mostrarFormulario","editar","tarea","modal","createElement","classList","add","innerHTML","nombre","appendChild","setTimeout","event","preventDefault","target","contains","remove","nombreTarea","value","trim","mostrarAlerta","actualizarTarea","datos","FormData","append","JSON","stringify","proyecto","response","method","body","res","tareaObj","id","parseInt","estado","id_proyecto","push","agregarTarea","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","confirmarEliminarTarea","Swal","fire","title","showCancelButton","confirmButtonText","cancelButtonText","then","isConfirmed","filter","eliminarTarea","mensaje","tipo","referencia","desaparece","alertaPrevia","alerta","referenceBox","parentElement","insertBefore","listadoTareas","firstChild","removeChild","limpiarTareas","arrayTareas","filtros","querySelectorAll","forEach","filtro","checked","filtrarTareas","length","estados","0","1","contenedorTarea","dataset","tareaId","nombreBox","textContent","iconNombre","onclick","opciones","btnEstadoTarea","toLowerCase","estadoTarea","cambiarEstadoTarea","btnEliminarTarea","idTarea","map","e","key"],"mappings":"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","file":"tareas.js","sourcesContent":["(() => {\r\n    let tareas = [];\r\n    let filtradas = [];\r\n    // Botón para mostrar el modar de agregar tarea\r\n    obtenerTareas();\r\n    const nuevaTarea = document.querySelector('#agregar-tarea');\r\n    nuevaTarea.addEventListener('click', function() {\r\n        mostrarFormulario();\r\n    });\r\n    // Filtros de búsqueda\r\n    const filtros = document.querySelectorAll('#filtros input[type=\"radio\"]');\r\n    filtros.forEach( filtro => {\r\n        filtro.addEventListener('input', mostrarTareas);\r\n    })\r\n    // Helpers\r\n    function mostrarFormulario(editar = false, tarea = {}) {\r\n        const modal = document.createElement('DIV');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n            <form class=\"form nueva-tarea\">\r\n                <legend>${editar ? \"Editar el Título\" : \"Añade una tarea\"}</legend>\r\n                <div class=\"campo\">\r\n                    <label class=\"bg-azul\">${editar ? \"Título\" : \"Tarea\"}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"tarea\"\r\n                        placeholder=\"${editar ? \"Nuevo Título\" : \"Añadir tarea\"}\"\r\n                        id=\"tarea\"\r\n                        class=\"col-span-2\"\r\n                        value=\"${editar ? tarea.nombre : \"\"}\"\r\n                    />\r\n                </div>\r\n                <div class=\"opciones\">\r\n                    <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"${editar ? \"Añadir Título\" : \"Añadir Tarea\"}\"/>\r\n                    <button type=\"button\" class=\"cerrar-modal\" >Cancelar</button>\r\n                </div>\r\n            </form>\r\n        `;       \r\n        document.querySelector('body').appendChild(modal);\r\n        setTimeout(() => {\r\n            const form = document.querySelector('.form');\r\n            form.classList.add('animar');\r\n        }, 10);\r\n\r\n        modal.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            console.log(event);\r\n            const classList = event.target.classList;\r\n            if(classList.contains('cerrar-modal') || classList.contains('modal')) {\r\n                const form = document.querySelector('.form');\r\n                form.classList.add('cerrar');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 150);\r\n            }\r\n            if(classList.contains('submit-nueva-tarea')) {\r\n                const nombreTarea = document.querySelector('#tarea').value.trim();\r\n                if(nombreTarea === '') {\r\n                    // Mostrar alerta de error\r\n                    mostrarAlerta( \r\n                        \"El nombre de la tarea es Obligatorio\", \r\n                        \"err\",\r\n                        \".form.nueva-tarea .campo\"\r\n                    );\r\n                } else {\r\n                    if(editar) {\r\n                        tarea.nombre = nombreTarea;\r\n                        actualizarTarea(tarea);\r\n                        const modal = document.querySelector('.modal');\r\n                        setTimeout(() => {\r\n                            modal.remove();\r\n                        }, 1000);\r\n                    } else {\r\n                        agregarTarea(nombreTarea);\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    function obtenerUrlProyecto() {\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams);\r\n        return proyecto.url;\r\n    }\r\n    function cambiarEstadoTarea({...tarea}) { \r\n        tarea.estado = +!tarea.estado;\r\n        actualizarTarea(tarea);\r\n    }\r\n    function confirmarEliminarTarea({...tarea}) {\r\n        Swal.fire({\r\n            title: '¿Quieres eliminar la tarea?',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Sí',\r\n            cancelButtonText: `No`,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tarea);\r\n            }\r\n        })\r\n    }\r\n    function filtrarTareas() {\r\n        const filtros = document.querySelectorAll('#filtros input[type=\"radio\"]');\r\n        let estado = -1;\r\n        filtros.forEach( filtro => {\r\n            if(filtro.checked) estado = parseInt(filtro.value);\r\n        });\r\n        filtradas = tareas;\r\n        if(estado !== -1) {\r\n            filtradas = tareas.filter( tarea => tarea.estado === estado);\r\n        }\r\n        return filtradas;\r\n    }\r\n\r\n    // DOM Scripting\r\n    function mostrarAlerta(mensaje, tipo, referencia, desaparece = true) {\r\n        const alertaPrevia = document.querySelector('.alert');\r\n        if(alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        };\r\n        const alerta = document.createElement('DIV');\r\n        alerta.innerHTML = `\r\n            <div class=\"alert\">\r\n                <div class=\"${tipo}\">\r\n                    ${mensaje}\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        // Inserta antes de la referencia\r\n        const referenceBox = document.querySelector(`${referencia}`);\r\n        referenceBox.parentElement.insertBefore(alerta, referenceBox);\r\n\r\n        // Eliminar elemento\r\n        if(desaparece) {\r\n            setTimeout(() => {\r\n                alerta.remove();\r\n            }, 5000);\r\n        }\r\n    }\r\n    function mostrarTareas() {\r\n        limpiarTareas();\r\n\r\n        const arrayTareas = filtrarTareas();\r\n\r\n        if(arrayTareas.length === 0) {\r\n            mostrarAlerta(\r\n                \"No hay tareas\",\r\n                \"err\",\r\n                \"#listado-tareas\",\r\n                false\r\n            );\r\n        } else {\r\n            const estados = {\r\n                0: \"Pendiente\",\r\n                1: \"Completa\",\r\n            }\r\n            arrayTareas.forEach( tarea => {\r\n                // Contenedor de la tarea\r\n                const contenedorTarea = document.createElement('LI');\r\n                contenedorTarea.dataset.tareaId = tarea.id;\r\n                contenedorTarea.classList.add('tarea');\r\n                \r\n                // Nombre tarea\r\n                const nombreBox = document.createElement('DIV');\r\n                nombreBox.classList.add('nombre-box');\r\n                const nombreTarea = document.createElement('P');\r\n                nombreTarea.textContent = `${tarea.nombre}`;\r\n                const iconNombre = document.createElement('DIV');\r\n                iconNombre.classList.add('icon');\r\n                iconNombre.innerHTML = `<i class=\"fa-solid fa-pen-to-square\"></i>`;\r\n                iconNombre.onclick = function() {\r\n                    mostrarFormulario(true, tarea);\r\n                }\r\n\r\n                nombreBox.append(nombreTarea, iconNombre);\r\n\r\n                // Opciones de la tarea\r\n                const opciones = document.createElement('DIV');\r\n                opciones.classList.add('opciones');\r\n\r\n                // Boton estado tarea\r\n                const btnEstadoTarea = document.createElement('BUTTON');\r\n                btnEstadoTarea.classList.add('estado-tarea');\r\n                btnEstadoTarea.classList.add(`${estados[tarea.estado].toLowerCase()}`);\r\n                btnEstadoTarea.textContent = estados[tarea.estado];\r\n                btnEstadoTarea.dataset.estadoTarea = tarea.estado;\r\n                btnEstadoTarea.onclick = function() {\r\n                    cambiarEstadoTarea(tarea);\r\n                }\r\n\r\n                const btnEliminarTarea = document.createElement('BUTTON');\r\n                btnEliminarTarea.classList.add('eliminar-tarea');\r\n                btnEliminarTarea.textContent = \"Eliminar\";\r\n                btnEliminarTarea.dataset.idTarea = tarea.id;\r\n                btnEliminarTarea.onclick = function() {\r\n                    confirmarEliminarTarea(tarea);\r\n                }\r\n\r\n                opciones.append(btnEstadoTarea, btnEliminarTarea);\r\n\r\n                contenedorTarea.append(nombreBox, opciones);\r\n\r\n                const listadoTareas = document.querySelector('#listado-tareas');\r\n                listadoTareas.appendChild(contenedorTarea);\r\n\r\n            })\r\n        }\r\n    }\r\n    function limpiarTareas() {\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        while(listadoTareas.firstChild) {\r\n            listadoTareas.removeChild(listadoTareas.firstChild);\r\n        }\r\n    }\r\n    // FETCH API\r\n    async function obtenerTareas() {\r\n        try {\r\n            const url = `/api/task?url=${obtenerUrlProyecto()}`;\r\n            const data = await fetch(url);\r\n            const result = await data.json();\r\n            tareas = result.tareas;\r\n            mostrarTareas();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    async function agregarTarea(nombreTarea) {\r\n        // Construir la petición\r\n        const datos = new FormData();\r\n        datos.append('data', JSON.stringify({\r\n            tarea: {\r\n                nombre: nombreTarea\r\n            },\r\n            proyecto: {\r\n                url: obtenerUrlProyecto()\r\n            }\r\n        }));\r\n        \r\n\r\n        try {\r\n          const url = \"/api/task/create\";\r\n          const response = await fetch(url, {\r\n            method: \"POST\",\r\n            body: datos\r\n          });\r\n          const result = await response.json();\r\n          if(result.res) {\r\n            mostrarAlerta( \r\n                \"Tarea creada correctamente\", \r\n                \"enviado\",\r\n                \".form.nueva-tarea .campo\"\r\n            );\r\n            const modal = document.querySelector('.modal');\r\n            setTimeout(() => {\r\n                modal.remove();\r\n            }, 1000);\r\n\r\n            // Agregar el objeto de tarea al global de tareas\r\n            const tareaObj = {\r\n                id: parseInt(result.tarea.id),\r\n                nombre: nombreTarea,\r\n                estado: 0,\r\n                id_proyecto: parseInt(result.tarea.id_proyecto),\r\n            }\r\n            tareas.push(tareaObj);\r\n            mostrarTareas();\r\n          } else {\r\n            mostrarAlerta( \r\n                \"No se pudo crear la tarea\", \r\n                \"err\",\r\n                \".form.nueva-tarea .campo\"\r\n            );\r\n            \r\n          }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    async function actualizarTarea(tarea) {\r\n        console.log(tarea);\r\n        const { estado, id, nombre } = tarea;\r\n        const datos = new FormData();\r\n        datos.append('data', JSON.stringify({\r\n            tarea: {\r\n                id: id,\r\n                estado: estado,\r\n                nombre: nombre,\r\n            },\r\n            proyecto: {\r\n                url: obtenerUrlProyecto()\r\n            }\r\n        }));\r\n\r\n        try {\r\n            const url = \"/api/task/update\";\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                body: datos,\r\n            })\r\n            const result = await response.json();\r\n            if(result.res === true) {\r\n                tareas = tareas.map( tarea => {\r\n                    if(tarea.id === parseInt(result.tarea.id)) {\r\n                        tarea.estado = parseInt(result.tarea.estado);\r\n                    }\r\n                    return tarea;\r\n                });\r\n                mostrarAlerta(\r\n                    \"Actualizado correctamente\",\r\n                    \"enviado\",\r\n                    \"#listado-tareas\",\r\n                );\r\n                mostrarTareas();\r\n            } else {\r\n                mostrarAlerta(\r\n                    \"No se pudo actualizar\",\r\n                    \"err\",\r\n                    \"#listado-tareas\",\r\n                );\r\n            }\r\n        } catch (error) {   \r\n            console.log(error);\r\n        }\r\n        \r\n\r\n\r\n    }\r\n    async function eliminarTarea(tarea) {\r\n        const { id } = tarea;\r\n        const datos = new FormData();\r\n        datos.append('data', JSON.stringify({\r\n            tarea: {\r\n                id: id,\r\n            },\r\n            proyecto: {\r\n                url: obtenerUrlProyecto()\r\n            }\r\n        }));\r\n\r\n        try {\r\n            const url = \"/api/task/delete\";\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                body: datos,\r\n            })\r\n            const result = await response.json();\r\n            if(result.res === true) {\r\n                tareas = tareas.filter( tarea => tarea.id !== id);\r\n                mostrarTareas();\r\n                mostrarAlerta(\r\n                    \"Se borró correctamente\",\r\n                    \"enviado\",\r\n                    \"#listado-tareas\",\r\n                );\r\n            } else {\r\n                mostrarAlerta(\r\n                    \"No se pudo borrar\",\r\n                    \"err\",\r\n                    \"#listado-tareas\",\r\n                );\r\n            }\r\n        } catch (error) {   \r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    // Evento teclado esc\r\n    document.addEventListener('keydown', e => {\r\n        if(e.key === \"Escape\") {\r\n            const modal = document.querySelector('.modal');\r\n            if(modal) modal.remove();\r\n        }\r\n    })\r\n})();"]}